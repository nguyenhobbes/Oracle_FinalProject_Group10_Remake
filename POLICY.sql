CONNECT MATTHEW/1
DROP CONTEXT MATTHEW;

ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
--------------------------------DROP POLICY---------------------------
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'NHANVIEN',
 POLICY_NAME => 'NHANVIEN_SELECT_SECURITY_NV');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'NHANVIEN',
 POLICY_NAME => 'NHANVIEN_UPDATE_SECURITY_NV');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'PHANCONG',
 POLICY_NAME => 'PHANCONG_SELECT_SECURITY_NV');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'NHANVIEN',
 POLICY_NAME => 'NHANVIEN_SELECT_SECURITY_QLTT');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'PHANCONG',
 POLICY_NAME => 'PHANCONG_SELECT_SECURITY_QLTT');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'NHANVIEN',
 POLICY_NAME => 'NHANVIEN_INSERT_SECURITY_NS');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'NHANVIEN',
 POLICY_NAME => 'NHANVIEN_UPDATE_SECURITY_NS');
END; 
/
BEGIN
 DBMS_RLS.DROP_POLICY(
 OBJECT_SCHEMA => 'MATTHEW',
 OBJECT_NAME =>'NHANVIEN',
 POLICY_NAME => 'NHANVIEN_SELECT_SECURITY_TP');
END; 
/

-- TAO ROLE
--CS#1
DROP ROLE NHANVIEN;
CREATE ROLE NHANVIEN;

DROP ROLE QLTRUCTIEP;
CREATE ROLE QLTRUCTIEP;

GRANT SELECT ON MATTHEW.NHANVIEN TO NHANVIEN;
GRANT SELECT ON MATTHEW.PHANCONG TO NHANVIEN;

GRANT SELECT ON MATTHEW.NHANVIEN TO QLTRUCTIEP;
GRANT SELECT ON MATTHEW.PHANCONG TO QLTRUCTIEP;

GRANT UPDATE(NGAYSINH, DIACHI, SODT) ON MATTHEW.NHANVIEN TO NHANVIEN;
GRANT UPDATE(NGAYSINH, DIACHI, SODT) ON MATTHEW.NHANVIEN TO QLTRUCTIEP;

--------------CS#3---------
DROP ROLE TRUONGPHONG;
CREATE ROLE TRUONGPHONG;

--CS#4--
DROP ROLE TAICHINH;
CREATE ROLE TAICHINH;

--CS#5--
--CREATE ROLE
DROP ROLE NHANSU;
CREATE ROLE NHANSU;
--GRANT QUYEN 
GRANT NHANVIEN TO NHANSU;

GRANT SELECT ON MATTHEW.PHONGBAN TO NHANSU;
GRANT UPDATE ON MATTHEW.PHONGBAN TO NHANSU;
GRANT INSERT ON MATTHEW.PHONGBAN TO NHANSU;

GRANT INSERT ON MATTHEW.NHANVIEN TO NHANSU;
GRANT UPDATE(MANV, TENNV, PHAI, NGAYSINH, DIACHI, SODT, VAITRO, MANQL, PHG) ON MATTHEW.NHANVIEN TO NHANSU;

-----------CS#6-----------
--CREATE ROLE
DROP ROLE TRUONGDA;
CREATE ROLE TRUONGDA;

--GRANT QUYEN
GRANT SELECT ON MATTHEW.DEAN TO TRUONGDA;
GRANT UPDATE ON MATTHEW.DEAN TO TRUONGDA;
GRANT INSERT ON MATTHEW.DEAN TO TRUONGDA;
GRANT DELETE ON MATTHEW.DEAN TO TRUONGDA;


CONNECT SYS/1 AS SYSDBA
ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE;
DROP PROCEDURE CreateUser_NV;
CREATE OR REPLACE PROCEDURE CreateUser_NV
AS
 CURSOR CUR IS (SELECT MANV
 FROM MATTHEW.NHANVIEN
 WHERE MANV NOT IN (SELECT USERNAME
 FROM ALL_USERS));
 strSQL VARCHAR(2000);
 ck_User int;
 Usr varchar2(30);
 BEGIN
 OPEN CUR;
 strSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE';
 EXECUTE IMMEDIATE (strSQL);
 LOOP
 FETCH CUR INTO Usr;
 EXIT WHEN CUR%NOTFOUND;
 strSQL := 'CREATE USER '||Usr||' IDENTIFIED BY '||Usr||' ACCOUNT UNLOCK';
 EXECUTE IMMEDIATE (strSQL);
 strSQL := 'GRANT CONNECT TO '||Usr;
 EXECUTE IMMEDIATE (strSQL);
 strSQL := 'GRANT CREATE SESSION TO '||Usr;
 EXECUTE IMMEDIATE (strSQL);
 strSQL := 'GRANT NHANVIEN TO '||Usr;
 EXECUTE IMMEDIATE (strSQL);
 END LOOP;
 strSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT"=FALSE';
 EXECUTE IMMEDIATE (strSQL);
END CreateUser_NV; 
/

DROP PROCEDURE DropUser_NV;
CREATE OR REPLACE PROCEDURE DropUser_NV
AS
 CURSOR CUR IS (SELECT MANV
 FROM MATTHEW.NHANVIEN
 WHERE MANV IN (SELECT USERNAME
 FROM ALL_USERS));
 strSQL VARCHAR(2000);
 ck_User int;
 Usr varchar2(30);
 BEGIN
 OPEN CUR;
 strSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE';
 EXECUTE IMMEDIATE (strSQL);
 LOOP
 FETCH CUR INTO Usr;
 EXIT WHEN CUR%NOTFOUND;
 strSQL := 'DROP USER '||Usr;
 EXECUTE IMMEDIATE (strSQL);
 END LOOP;
 strSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT"=FALSE';
 EXECUTE IMMEDIATE (strSQL);
END DropUser_NV; 
/

DROP PROCEDURE GrantUser_NV;
CREATE OR REPLACE PROCEDURE GrantUser_NV
AS
 CURSOR CUR IS (SELECT MANV
 FROM MATTHEW.NHANVIEN);
 strSQL VARCHAR(2000);
 ck_User int;
 Usr varchar2(30);
 vt varchar2(20);
 BEGIN
 OPEN CUR;
 strSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE';
 EXECUTE IMMEDIATE (strSQL);
 LOOP
 FETCH CUR INTO Usr;
 EXIT WHEN CUR%NOTFOUND;
 SELECT VAITRO INTO vt FROM MATTHEW.NHANVIEN 
 WHERE MANV = Usr;
 if (vt = 'QL TRUC TIEP') then
    begin
    strSQL := 'GRANT QLTRUCTIEP TO '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    strSQL := 'REVOKE NHANVIEN FROM '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    end;
 ELSIF (vt = 'TRUONG PHONG') then  
    begin
    strSQL := 'GRANT TRUONGPHONG TO '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    strSQL := 'REVOKE NHANVIEN FROM '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    end;
  ELSIF (vt = 'TAI CHINH') then  
    begin
    strSQL := 'GRANT TAICHINH TO '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    end;
  ELSIF (vt = 'NHAN SU') then  
    begin
    strSQL := 'GRANT NHANSU TO '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    end;
  ELSIF (vt = 'TRUONG DE AN') then
    begin
    strSQL := 'GRANT TRUONGDA TO '||Usr;
    EXECUTE IMMEDIATE (strSQL);
    end;
 END IF;
 END LOOP;
 strSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT"=FALSE';
 EXECUTE IMMEDIATE (strSQL);
END GrantUser_NV; 
/

EXEC DropUser_NV;
EXEC CreateUser_NV;
EXEC GrantUser_NV;
/

CONNECT MATTHEW/1

--TAO CONTEXT 
CREATE CONTEXT MATTHEW USING MATTHEW.CONTEXT_PACKAGE;

--TAO PACKAGE (CONTEXT_PACKAGE)
--CREATE OR REPLACE PACKAGE CONTEXT_PACKAGE AS 
--Procedure SET_CONTEXT_ID;
--END CONTEXT_PACKAGE;
--/

-- TAO PACKAGE BODY (CONTEXT_PACKAGE)
--CREATE OR REPLACE PACKAGE BODY CONTEXT_PACKAGE is 
--Procedure SET_CONTEXT_ID IS
--v_user VARCHAR2(30);
--v_id VARCHAR2(30);
--BEGIN
--DBMS_SESSION.SET_CONTEXT('MATTHEW', 'SETUP', 'TRUE');
----Lay ten user dang login
--v_user := SYS_CONTEXT('USERENV','SESSION_USER');
--BEGIN
--SELECT MANV INTO v_id
--FROM MATTHEW.NHANVIEN 
--WHERE MANV = v_user;
--DBMS_SESSION.SET_CONTEXT('MATTHEW','USER_ID', v_id);

--user khong ton tai => ID = 0
--EXCEPTION
--WHEN NO_DATA_FOUND then 
--DBMS_SESSION.SET_CONTEXT('MATTHEW', 'USER_ID', '0');
--DBMS_SESSION.SET_CONTEXT('MATTHEW', 'SETUP', 'FALSE');
--END SET_CONTEXT_ID;
--END CONTEXT_PACKAGE;
--/

--GRANT EXECUTE ON MATTHEW.CONTEXT_PACKAGE TO PUBLIC;
--CREATE OR REPLACE PUBLIC SYNONYM CONTEXT_PACKAGE FOR MATTHEW.CONTEXT_PACKAGE;
/

--Tao Trigger khi dang nhap
--drop trigger SET_SECURITY_CONTEXT
--CREATE OR REPLACE TRIGGER MATTHEW.SET_SECURITY_CONTEXT
--AFTER LOGON ON DATABASE
--BEGIN
--CONTEXT_PACKAGE.SET_CONTEXT_ID;
--END;
--/

--REVOKE EXECUTE ON MATTHEW.CONTEXT_PACKAGE FROM PUBLIC;

CREATE OR REPLACE PACKAGE SECURITY_PACKAGE AS
--CS#1
--POLICY SELECT (NHANVIEN)
FUNCTION NHANVIEN_SELECT_SECURITY_NV(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;

--POLICY UPDATE (NHANVIEN)
FUNCTION NHANVIEN_UPDATE_SECURITY_NV(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;

-- POLICY SELECT (PHANCONG)
FUNCTION PHANCONG_SELECT_SECURITY_NV(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;

----CS#2
FUNCTION NHANVIEN_SELECT_SECURITY_QLTT(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;

-- POLICY SELECT (PHANCONG)
FUNCTION PHANCONG_SELECT_SECURITY_QLTT(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;

--CS#3
FUNCTION NHANVIEN_SELECT_SECURITY_TP (schema_name VARCHAR2, table_name VARCHAR2)
RETURN VARCHAR2;

--CS#5
--POLICY UPDATE (NHANVIEN)
FUNCTION NHANVIEN_UPDATE_SECURITY_NS(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;

-- POLICY SELECT (PHANCONG)
FUNCTION NHANVIEN_INSERT_SECURITY_NS(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2;
END SECURITY_PACKAGE;
/


--TAO THAN PACKAGE
CREATE OR REPLACE PACKAGE BODY SECURITY_PACKAGE IS
----------------CS #1-------------------------------------------------
--POLICY SELECT (NHANVIEN)
FUNCTION NHANVIEN_SELECT_SECURITY_NV(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
BEGIN 
    predicate := 'MANV = SYS_CONTEXT(''USERENV'',''SESSION_USER'')';

return predicate;
END NHANVIEN_SELECT_SECURITY_NV;

--POLICY UPDATE (NHANVIEN)
FUNCTION NHANVIEN_UPDATE_SECURITY_NV(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
BEGIN
    predicate := 'MANV = SYS_CONTEXT(''USERENV'',''SESSION_USER'')';
return predicate;
END NHANVIEN_UPDATE_SECURITY_NV;

-- POLICY SELECT (PHANCONG)
FUNCTION PHANCONG_SELECT_SECURITY_NV(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
BEGIN
predicate := 'MANV = SYS_CONTEXT(''USERENV'',''SESSION_USER'')';
return predicate;
END PHANCONG_SELECT_SECURITY_NV;

----------------CS #2-------------------------------------------------
FUNCTION NHANVIEN_SELECT_SECURITY_QLTT(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
vt VARCHAR2(2000);
v_count int;
V_USER VARCHAR2(30);
BEGIN 
SELECT count(*) into v_count
              FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT('USERENV', 'SESSION_USER') AND GRANTED_ROLE = 'QLTRUCTIEP';
-- XEM TAT CA THUOC TINH TREN NHANVIEN
IF (v_count > 0) THEN
    predicate := 'MANV = SYS_CONTEXT(''USERENV'',''SESSION_USER'') OR MANQL = SYS_CONTEXT(''USERENV'',''SESSION_USER'')';
END IF;
return predicate;

END NHANVIEN_SELECT_SECURITY_QLTT;

-- POLICY SELECT (PHANCONG)
FUNCTION PHANCONG_SELECT_SECURITY_QLTT(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
vt VARCHAR2(2000);
v_count int;
BEGIN 
SELECT count(*) into v_count
              FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT('USERENV', 'SESSION_USER') AND GRANTED_ROLE = 'QLTRUCTIEP';
-- XEM TAT CA THUOC TINH TREN NHANVIEN
IF (v_count > 0) THEN
-- CHI CHINH SUA NGAYSINH, DIACHI, SODT TREN NHANVIEN 
    predicate := 'MANV IN (SELECT MANV FROM MATTHEW.NHANVIEN)';
END IF;
return predicate;
END PHANCONG_SELECT_SECURITY_QLTT;

------------CS#3---------------
FUNCTION NHANVIEN_SELECT_SECURITY_TP (schema_name VARCHAR2, table_name VARCHAR2)
RETURN VARCHAR2 IS
predicate VARCHAR2(4000);
v_count int;
BEGIN 
SELECT count(*) into v_count
              FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT('USERENV', 'SESSION_USER') AND GRANTED_ROLE = 'TRUONGPHONG';
-- XEM TAT CA THUOC TINH TREN NHANVIEN
IF (v_count > 0) THEN
    predicate := 'MANV = SYS_CONTEXT(''USERENV'',''SESSION_USER'') or PHG IN (SELECT PHG FROM NHANVIEN WHERE TRPHG = SYS_CONTEXT(''USERENV'',''SESSION_USER''))';
  END IF;
  
  RETURN predicate;
END NHANVIEN_SELECT_SECURITY_TP;

-----------CS#5------------

--POLICY UPDATE (NHANVIEN)
FUNCTION NHANVIEN_UPDATE_SECURITY_NS(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
v_count int;
BEGIN 
SELECT count(*) into v_count
              FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT('USERENV', 'SESSION_USER') AND GRANTED_ROLE = 'NHANSU';
-- XEM TAT CA THUOC TINH TREN NHANVIEN
IF (v_count > 0) THEN
    predicate := '1 = 1';
ELSE
    predicate := '1 = 0';
end if;
return predicate;
END NHANVIEN_UPDATE_SECURITY_NS;

-- POLICY SELECT (PHANCONG)
FUNCTION NHANVIEN_INSERT_SECURITY_NS(Owner VARCHAR2, Objname VARCHAR2)
return VARCHAR2 IS
predicate VARCHAR2(2000);
v_count int;
BEGIN 
SELECT count(*) into v_count
              FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT('USERENV', 'SESSION_USER') AND GRANTED_ROLE = 'NHANSU';
-- XEM TAT CA THUOC TINH TREN NHANVIEN
IF (v_count > 0) THEN
    predicate := '1 = 1';
end if;
END NHANVIEN_INSERT_SECURITY_NS;

END SECURITY_PACKAGE;
/
--GRANT QUYEN THUC THI TREN PACKAGE CHO CAC USER KHAC
GRANT EXECUTE ON MATTHEW.SECURITY_PACKAGE TO PUBLIC;
--REVOKE EXECUTE ON MATTHEW.SECURITY_PACKAGE FROM PUBLIC;
CREATE OR REPLACE PUBLIC SYNONYM SECURITY_PACKAGE FOR MATTHEW.SECURITY_PACKAGE;
/

-----------------ADD POLICY---------------------------
--------------CS #1-----------------------------------
BEGIN
--SELECT FUNCTION (NHANVIEN) (XEM TAT CA THUOC TINH NHANVIEN)
DBMS_RLS.ADD_POLICY('MATTHEW','NHANVIEN','NHANVIEN_SELECT_SECURITY_NV','MATTHEW','SECURITY_PACKAGE.NHANVIEN_SELECT_SECURITY_NV','SELECT');

--UPDATE FUNCTION (NHANVIEN) (CHI CHINH SUA NGAYSINH, DIACHI, SODT TRONG NHANVIEN)
DBMS_RLS.ADD_POLICY('MATTHEW','NHANVIEN','NHANVIEN_UPDATE_SECURITY_NV','MATTHEW','SECURITY_PACKAGE.NHANVIEN_UPDATE_SECURITY_NV','UPDATE',TRUE, sec_relevant_cols => 'NGAYSINH, DIACHI, SODT');

--SELECT FUNCTION (PHANCONG) (XEM TAT CA THUOC TINH PHANCONG)
DBMS_RLS.ADD_POLICY('MATTHEW','PHANCONG','PHANCONG_SELECT_SECURITY_NV','MATTHEW','SECURITY_PACKAGE.PHANCONG_SELECT_SECURITY_NV','SELECT');

--------------CS #2-----------------------------------
DBMS_RLS.ADD_POLICY('MATTHEW','NHANVIEN','NHANVIEN_SELECT_SECURITY_QLTT',
'MATTHEW','SECURITY_PACKAGE.NHANVIEN_SELECT_SECURITY_QLTT','SELECT');

--POLICY SELECT (PHANCONG)
DBMS_RLS.ADD_POLICY('MATTHEW','PHANCONG','PHANCONG_SELECT_SECURITY_QLTT',
'MATTHEW','SECURITY_PACKAGE.PHANCONG_SELECT_SECURITY_QLTT','SELECT');

------------------CS#3---------------
DBMS_RLS.ADD_POLICY('MATTHEW','NHANVIEN','NHANVIEN_SELECT_SECURITY_TP','MATTHEW','SECURITY_PACKAGE.NHANVIEN_SELECT_SECURITY_TP','SELECT');

-------------CS#5-------------
--UPDATE FUNCTION

DBMS_RLS.ADD_POLICY('MATTHEW','NHANVIEN','NHANVIEN_UPDATE_SECURITY_NS','MATTHEW','SECURITY_PACKAGE.NHANVIEN_UPDATE_SECURITY_NS','UPDATE',TRUE);

--INSERT FUNCTION 

DBMS_RLS.ADD_POLICY('MATTHEW','NHANVIEN','NHANVIEN_INSERT_SECURITY_NS','MATTHEW','SECURITY_PACKAGE.NHANVIEN_INSERT_SECURITY_NS','INSERT',TRUE, sec_relevant_cols => 'MANV, TENNV, PHAI, NGAYSINH, DIACHI, SODT, VAITRO, MANQL, PHG');
END;
/

-- SELECT * FROM V$VPD_POLICY; 
-- SELECT * FROM DBA_SEC_RELEVANT_COLS;
-- SELECT * FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT('USERENV', 'SESSION_USER')
--SELECT SYS_CONTEXT('USERENV', 'SESSION_USER') USR, SYS_CONTEXT('MATTHEW','USER_ID') ID FROM DUAL;
--SELECT USERNAME FROM ALL_USERS

--select user from dual
-- SELECT * FROM MATTHEW.NHANVIEN








